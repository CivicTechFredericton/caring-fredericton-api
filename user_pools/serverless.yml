service: caring-fred

provider:
  name: aws
  region: ${env:AWS_DEFAULT_REGION, 'ca-central-1'}
  stage: ${opt:stage}
  stackName: ${self:service}-users-${self:provider.stage}
  deploymentBucket:
    name: ${self:service}-${self:provider.stage}-serverlessdeploymentbucket
    serverSideEncryption: AES256

  runtime: python3.8
  memorySize: 128
  timeout: 6

  lambdaHashingVersion: 20201221

  # Reference external API Gateway definition
  apiGateway:
    restApiId: ${cf:${self:service}-apig-${self:provider.stage}.ApiGateway}
    restApiRootResourceId: ${cf:${self:service}-apig-${self:provider.stage}.ApiGatewayRootResourceId}

custom:
  user_pool_name: ${self:service}-${self:provider.stage}-users

  default_domain_name: ${ssm:${self:service}-hosted-zone}
  default_ui_domain_name: https://${self:provider.stage}-www.${self:custom.default_domain_name}
  web_domain_name: ${ssm:${self:service}-${self:provider.stage}-ui-domain-name, self:custom.default_ui_domain_name}

resources:
  Resources:
    #===================================================================
    # Cognito
    #===================================================================
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      DeletionPolicy: Delete
      Properties:
        EmailConfiguration:
          EmailSendingAccount: COGNITO_DEFAULT
          # EmailSendingAccount: DEVELOPER
          # ReplyToEmailAddress: # email address
          # SourceArn: # sourceARN to verified email address in SES
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: False
          InviteMessageTemplate:
            EmailSubject: Caring Calendar - Your Temporary Password
            EmailMessage: |
              Your username is {username} and temporary password is {####}.  Please sign in with your temporary
              credentials at ${self:custom.web_domain_name}/signin to change your password.
        AutoVerifiedAttributes:
          - email
          # - phone_number
        VerificationMessageTemplate:
          DefaultEmailOption: CONFIRM_WITH_CODE
          # TODO: Send link as opposed to code?
          # CONFIRM_WITH_LINK
        Policies:
          PasswordPolicy:
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: false
            MinimumLength: 8
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
            - Name: verified_phone_number
              Priority: 2
        UsernameAttributes:
          - email
          - phone_number
        UserPoolName: ${self:custom.user_pool_name}
        UsernameConfiguration:
          CaseSensitive: false
        UserPoolTags:
          CLIENT: Civic Tech Fredericton
          PROJECT: Caring Calendar

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: users
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        RefreshTokenValidity: 30
        UserPoolId:
          Ref: CognitoUserPool

    CognitoAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        IdentitySource: method.request.header.Authorization
        Name: ${self:service}-${self:provider.stage}-app-users-authorizer
        RestApiId: ${self:provider.apiGateway.restApiId}
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - Fn::GetAtt: [CognitoUserPool, Arn]

  #===================================================================
  # Stack Outputs
  #===================================================================
  Outputs:
    UserPoolAuthorizer:
      Value:
        Ref: CognitoAuthorizer
      Export:
        Name: !Sub ${self:service}-${self:provider.stage}-users:user-pool-authorizer

    UserPoolName:
      Value:
        Fn::Join:
          - ''
          - - ${self:custom.user_pool_name}

    UserPoolId:
      Value:
        Ref: CognitoUserPool
      Export:
        Name: !Sub ${self:service}-${self:provider.stage}-users:user-pool-id

    UserPoolClientId:
      Value:
        Ref: CognitoUserPoolClient
      Export:
        Name: !Sub ${self:service}-${self:provider.stage}-users:user-pool-client-id

    UserPoolArn:
      Value: !GetAtt CognitoUserPool.Arn
      Export:
        Name: !Sub ${self:service}-${self:provider.stage}-users:user-pool-arn
