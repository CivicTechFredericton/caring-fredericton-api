# For the complete swagger spec, go here: https://goo.gl/ArFXhH
# It is important to understand all of the components that go into a
# swagger doc.  It is the documentation for your API.  A proper swagger
# doc can be plugged into swagger-ui (https://goo.gl/UmNFcn) and give a
# beautiful page describing your API.
swagger: '2.0'
info:
  title: Caring Calendar API
  description: >
    # Caring Calendar REST API

    These API are used for interacting with information used for the Caring Calendar in
    compliance with standard REST specifications.

  version: "1.0.0"

host: api.caringfredericton.com
schemes:
  - https
basePath: /
produces:
  - application/json
consumes:
  - application/json
paths:
  # API endpoint for retrieving an authentication token
  /api/login:
    post:
      tags:
        - external-api
      summary: Retrieve user token
      parameters:
      - in: body
        name: body
        description: "User authentication request details"
        required: true
        schema:
          $ref: "#/definitions/AuthRequest"
      responses:
        200:
          description: Auth token for the API user
          schema:
            $ref: '#/definitions/AuthResponse'
        401:
          description: Invalid username and password combination
        422:
          description: Missing parameters, user not found, or account locked

  /events:
    get:
      tags:
        - events
      summary: Returns a list of all the events in the system
      parameters:
        - name: start_date
          in: query
          description: >
            Filter value for the start date period of events
          required: false
          type: string
          format: YYYY-MM-DD
        - name: end_date
          in: query
          description: >
            Filter value for the end date period of events
          required: false
          type: string
          format: YYYY-MM-DD
        - name: categories
          in: query
          description: >
            Comma delimited filter value list of category names
          required: false
          type: string

      responses:
        200:
          description: Paged object of events
          schema:
            $ref: '#/definitions/PagedEvent'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'

  /organizations/<org_id>/events:
    get:
      tags:
      - events
      summary: Returns a list of all the events associated with the organization
      parameters:
      - name: org_id
        in: path
        description: >
          Organization ID
        required: true
        type: string
      - name: start_date
        in: query
        description: >
          Filter value for the start date period of events
        required: false
        type: string
        format: YYYY-MM-DD
      - name: end_date
        in: query
        description: >
          Filter value for the end date period of events
        required: false
        type: string
        format: YYYY-MM-DD
      - name: categories
        in: query
        description: >
          Comma delimited filter value list of category names
        required: false
        type: string
      responses:
        200:
          description: Paged object of events
          schema:
            $ref: '#/definitions/PagedEvent'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
    post:
      tags:
        - events
      summary: Creates a new event in the system for an organization
      parameters:
      - in: path
        name: org_id
        description: >
          Organization ID. The Organization must be verified. 
        required: true
        type: string
      - in: body
        name: body
        description: >
          Event request details
        required: true
        schema:
          $ref: "#/definitions/EventRequest"
      responses:
        201:
          description: The event was created in the system
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        422:
          description: Missing required parameters

  /organizations/<org_id>/events/<event_id>:
    get:
      tags:
        - events
      summary: Gets the details of an existing event
      parameters:
        - in: path
          name: org_id
          description: >
            Organization ID
          required: true
          type: string
        - in: path
          name: event_id
          description: >
            Event ID
          required: true
          type: string
      responses:
        200:
          description: Event found
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Event for the organization does not exist in the system
    put:
      tags:
        - events
      summary: Updates an existing event
      parameters:
        - in: path
          name: org_id
          description: >
            Organization ID
          required: true
          type: string
        - in: path
          name: event_id
          description: >
            Event ID
          required: true
          type: string
        - in: body
          name: body
          description: >
            Event request details
          required: true
          schema:
            $ref: "#/definitions/EventRequest"
      responses:
        200:
          description: Event details updated
          schema:
            $ref: '#/definitions/EventDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Event for the organization does not exist in the system

  /organizations:
    get:
      tags:
        - organizations
      summary: Returns a list of all the organizations in the system
      parameters:
      - name: is_verified
        in: query
        description: >
          Filter value on organization's verification status
        required: false
        type: boolean
      responses:
        200:
          description: Paged object of organizations
          schema:
            $ref: '#/definitions/PagedOrganization'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'

  /organizations/<org_id>:
    get:
      tags:
        - organizations
      summary: Returns the details for an organization
      parameters:
      - in: path
        name: org_id
        description: >
          Organization ID
        required: true
        type: string
      responses:
        200:
          description: Organization details
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Organization does not exist in the system
    put:
      tags:
        - organizations
      summary: Update the details of an organization
      parameters:
      - in: path
        name: org_id
        description: >
          Organization ID
        required: true
        type: string
      - in: body
        name: body
        description: >
          Verification details
        required: true
        schema:
          $ref: "#/definitions/VerificationDetails"
      responses:
        200:
          description: Organization details updated
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Organization does not exist in the system

  /organizations/<org_id>/verify:
    post:
      tags:
        - organizations
      summary: Marks the organization as verified in the system
      parameters:
      - in: path
        name: org_id
        description: >
          Organization ID
        required: true
        type: string
      - in: body
        name: body
        description: >
          Verification details
        required: true
        schema:
          $ref: "#/definitions/VerificationDetails"
      responses:
        201:
          description: The verification request was successful
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Organization does not exist in the system

  /organizations/register:
    post:
      tags:
        - organizations 
      summary: Sends a registration request for an organization
      parameters:
      - in: body
        name: body
        description: >
          Organization registration request details
        required: true
        schema:
          $ref: "#/definitions/OrganizationRequest"
      responses:
        201:
          description: The request was accepted in the system pending verification by the System Adminstrator
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        422:
          description: Missing required parameters

  /users:
    get:
      tags:
        - users 
      summary: Returns a list of all the users in the system 
      parameters:
      responses:
        200:
          description: Paged object of users 
          schema:
            $ref: '#/definitions/PagedUser'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'

  /users/register:
    post:
      tags:
        - external-api
      summary: Registers a new user 
      parameters:
      - in: body
        name: body
        description: >
          User registration details
        required: true
        schema:
          $ref: "#/definitions/UserRegistrationDetails"
      responses:
        201:
          description: The new user was created 
          schema:
            $ref: '#/definitions/UserDetailsResponse'
        422:
          description: Missing required parameters
   
  /users/activate:
    post:
      tags:
        - external-api
      summary: Registers a new user and logs them in
      parameters:
      - in: body
        name: body
        description: >
          User activation details 
        required: true
        schema:
          $ref: "#/definitions/UserActivationDetails"
      responses:
        201:
          description: Auth token for the acviated user
          schema:
            $ref: '#/definitions/AuthResponse'
        422:
          description: Missing required parameters 


  /users/<user_id>:
    get:
      tags:
        - users  
      summary: Returns the details for a user 
      parameters:
      - in: path
        name: user_id
        description: >
          User ID
        required: true
        type: string
      responses:
        200:
          description: User details
          schema:
            $ref: '#/definitions/UserDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: User does not exist in the system

  /users/<user_id>/join/<org_id>:
    post:
      tags:
        - users
      summary: Joins the user with user_id to org_id. Any existing org that the user is already part of will be replaced.
      parameters:
      - in: path
        name: user_id
        description: >
          User ID
        required: true
        type: string
      - in: path
        name: org_id
        description: >
          Organization ID
        required: true
        type: string
      - in: body
        name: body
        description: >
          Join details
        required: true
        schema:
          $ref: "#/definitions/UserJoinDetails"
      responses:
        200:
          description: User Details 
          schema:
            $ref: '#/definitions/UserDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: User does not exist in the system

definitions:
  # -------------------------------------
  # Auth Definitions
  # -------------------------------------
  AuthRequest:
    description: >
      Request object that includes user details for authentication
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: Username of the system user
      password:
        type: string
        description: Password of the system user

  AuthResponse:
    description: >
      Response object that includes an auth token for the API user
    type: object
    properties:
       authToken:
          type: string
          readOnly: true

  AuthError:
    description: >
      Response received when an authorization error has occured. This can be
      received when:
      * a malformed or expired Authorization token is submitted
      * the user is requesting an unauthorized route
    type: object
    properties:
      code:
        type: string
        enum:
          - error.jwt.expired
          - error.jwt.invalid_signature
      message:
        type: string

  # -------------------------------------
  # Organization Definitions
  # -------------------------------------
  Address:
    description: >
      organization address
    type: object
    required:
      - street
      - postal_code
      - city
      - province
      - country
    properties:
      street:
        type: string
        description: Street
      postal_code:
        type: string
        description: Postal code
      city:
        type: string
        description: City
      province:
        type: string
        description: Province
      country:
        type: string
        description: Country

  AdministratorDetails:
    description: >
      Contact details for an organization
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      first_name:
        type: string
        description: Organization's contact first name
      last_name:
        type: string
        description: Organization's contact last name
      email:
        type: string
        description: Organization's contact email address

  OrganizationRequest:
    description: >
      Request object that includes details for registering a new organization
    type: object
    required:
    - name
    - email
    - phone
    - administrator
    - address
    properties:
      name:
        type: string
        description: Name of the organization
      description:
        type: string
        description: Description of the organization
      email:
        type: string
        description: Email for the organization
      phone:
        type: string
        description: Phone number for the organization
      administrator:
        allOf:
        - $ref: '#/definitions/AdministratorDetails'
      address:
        allOf:
        - $ref: '#/definitions/Address'

  OrganizationResponse:
    description: >
      Response object that includes basic details of the organization; used in list responses
    type: object
    properties:
      id:
        type: string
        description: ID of the organization as a UUID
        readOnly: true
      name:
        type: string
        description: Name of the organization
      email:
        type: string
        description: Organization email
      phone:
        type: string
        description: Organization phone number
      is_verified:
        type: boolean
        readOnly: true

  OrganizationDetailsResponse:
    description: >
      Response object that includes the details of an organization
    type: object
    properties:
      id:
        type: string
        description: ID of the organization as a UUID
        readOnly: true
      name:
        type: string
        description: Name of the organization
      phone:
        type: string
        description: Organization phone number
      email:
        type: string
        description: Organization email
      administrator_details:
        allOf:
        - $ref: '#/definitions/AdministratorDetails'
      address:
        allOf:
        - $ref: '#/definitions/Address'
      is_verified:
        type: boolean
        readOnly: true

  PagedOrganization:
    description: >
      Page of organization resources
    type: object
    properties:
      objects:
        type: array
        description: Organizations array for page
        items:
          $ref: '#/definitions/OrganizationResponse'
      page:
        type: integer
        description: Current page
      size:
        type: integer
        description: Size of the page
      _links:
        $ref: '#/definitions/PageLinks'

  VerificationDetails:
    description: >
      Verification details for a requested action (for example: verify organization details)
    type:
      object
    required:
      - is_verified
    properties:
      is_verified:
        type: boolean
        description: Flag indicating verification status
      reason:
        type: string
        description: Detailed reason if the request is not verified

  # -------------------------------------
  # Event Definitions
  # -------------------------------------
  EventRequest:
    description: >
      Request object that includes details for an event
    type: object
    required:
    - name
    - start_date
    - end_date
    - start_time
    - end_time
    properties:
      name:
        type: string
        description: Name of the event
      owner:
        type: string
        description: Owner identifier for the event
      description:
        type: string
        description: Description of the event
      categories:
        type: array
        items:
          type: string
        description: List of category tag names associated with the event
      start_date:
        type: string
        description: The start date for the event
        format: YYYY-MM-DD
      end_date:
        type: string
        description: The end date for the event
        format: YYYY-MM-DD
      start_time:
        type: string
        description: The start time for the event
        format: HH:MM:SS
      end_time:
        type: string
        description: The end time for the event
        format: HH:MM:SS
      is_recurring:
        type: boolean
        description: Flag indicating if the event is recurring
        default: false
      recurrence_details:
        allOf:
        - $ref: '#/definitions/RecurrenceDetails'

  EventResponse:
    description: >
      Response object containing the base event information
    type: object
    properties:
      id:
        type: string
        description: ID of the event as a UUID
        readOnly: true
      name:
        type: string
        description: Name of the event
      owner:
        type: string
        description: Owner identifier for the event
      description:
        type: string
        description: Description of the event
      categories:
        type: array
        items:
          type: string
        description: List of category tag names associated with the event
      start_date:
        type: string
        description: The start date for the event
        format: YYYY-MM-DD
      end_date:
        type: string
        description: The end date for the event
        format: YYYY-MM-DD
      start_time:
        type: string
        description: The start time for the event
        format: HH:MM:SS
      end_time:
        type: string
        description: The end time for the event
        format: HH:MM:SS

  EventDetailsResponse:
    description: >
      Response object containing the detailed event information
    type: object
    properties:
      id:
        type: string
        description: ID of the event as a UUID
        readOnly: true
      name:
        type: string
        description: Name of the event
      owner:
        type: string
        description: Owner identifier for the event
      description:
        type: string
        description: Description of the event
      categories:
        type: array
        items:
          type: string
        description: List of category tag names associated with the event
      start_date:
        type: string
        description: The start date for the event
        format: YYYY-MM-DD
      end_date:
        type: string
        description: The end date for the event
        format: YYYY-MM-DD
      start_time:
        type: string
        description: The start time for the event
        format: HH:MM:SS
      end_time:
        type: string
        description: The end time for the event
        format: HH:MM:SS
      is_recurring:
        type: boolean
        description: Flag indicating if the event is recurring
      recurrence_details:
        allOf:
        - $ref: '#/definitions/RecurrenceDetails'
      timezone:
        type: string
        description: Timezone for the event as it was created

  PagedEvent:
    description: >
      Page of organization resources
    type: object
    properties:
      objects:
        type: array
        description: Events array for page
        items:
          $ref: '#/definitions/EventResponse'
      page:
        type: integer
        description: Current page
      size:
        type: integer
        description: Size of the page
      _links:
        $ref: '#/definitions/PageLinks'

  RecurrenceDetails:
    description: >
      Details pertaining to the event's recurrence information
    type: object
    required:
    - recurrence
    properties:
      recurrence:
        type: string
        description: The event recurrence option (DAILY, WEEKLY, BI_WEEKLY, MONTHLY)
      num_recurrences:
        type: integer
        description: The number of times the event is set to recur

  # -------------------------------------
  # User Definitions
  # -------------------------------------
  PagedUser:
    description: >
      Page of user resources
    type: object
    properties:
      objects:
        type: array
        description: User array for page
        items:
          $ref: '#/definitions/UserDetailsResponse'
      page:
        type: integer
        description: Current page
      size:
        type: integer
        description: Size of the page
      _links:
        $ref: '#/definitions/PageLinks'

  UserDetailsResponse:
    description: >
      Response object containing the detailed user information
    type: object
    properties:
      id:
        type: string
        description: ID of the user as a UUID
      email:
        type: string
        description: Name of the event
      first_name:
        type: string
        description: The user's first name 
      last_name:
        type: string
        description: The user's second name 
      active:
        type: boolean
        description: The user's activity state
      organization_id:
        type: string
        description: the ID of the organization that the user is associated with as a UUID
 
  UserRegistrationDetails:
    description: >
      Registration details for a user. 
    type:
      object
    required:
    - email
    - password
    - new_password
    properties:
      email:
        type: string
        description: The user email/username
      password:
        type: string
        description: The existing password
      first_name:
        type: string
        description: The users's first name 
      last_name:
        type: string
        description: The users's last name 

  UserActivationDetails:
    description: >
      Activation details for a user 
    type:
      object
    required:
    - email 
    - password 
    - new_password 
    properties:
      email:
        type: string 
        description: The user email/username 
      password:
        type: string
        description: The existing password 
      new_password:
        type: string
        description: The new password 

  UserJoinDetails:
    description: >
    type:
      object
    required:
    - reason 
    properties:
      reason:
        type: string
        description: The reason the user is joining this organization. 


  # -------------------------------------
  # Common Page Definitions
  # -------------------------------------
  PageLinks:
    description: >
      Links included in paged responses for navigation
    type: object
    properties:
      next_page:
        type: string

