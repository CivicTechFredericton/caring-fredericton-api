# For the complete swagger spec, go here: https://goo.gl/ArFXhH
# It is important to understand all of the components that go into a
# swagger doc.  It is the documentation for your API.  A proper swagger
# doc can be plugged into swagger-ui (https://goo.gl/UmNFcn) and give a
# beautiful page describing your API.
swagger: '2.0'
info:
  title: Caring Calendar API
  description: >
    # Caring Calendar REST API

    These API are used for interacting with information used for the Caring Calendar in
    compliance with standard REST specifications.

  version: "1.0.0"

host: api.caringfredericton.com
schemes:
  - https
basePath: /
produces:
  - application/json
consumes:
  - application/json
paths:
  # API endpoint for retrieving an authentication token
  /api/login:
    post:
      tags:
        - external-api
      summary: Retrieve user token
      parameters:
      - in: body
        name: body
        description: "User authentication request details"
        required: true
        schema:
          $ref: "#/definitions/AuthRequest"
      responses:
        200:
          description: Auth token for the API user
          schema:
            $ref: '#/definitions/AuthResponse'
        401:
          description: Invalid username and password combination
        422:
          description: Missing parameters, user not found, or account locked

  /register-organization:
    post:
      tags:
        - external-api
      summary: Sends a registration request for an organization
      parameters:
      - in: body
        name: body
        description: >
          Organization registration request details
        required: true
        schema:
          $ref: "#/definitions/OrganizationRequest"
      responses:
        201:
          description: The request was accepted in the system pending verification by the System Adminstrator
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        422:
          description: Missing required parameters

  /organizations:
    get:
      tags:
        - organizations
      summary: Returns a list of all the organizations in the system
      responses:
        200:
          description: Paged object of organizations
          schema:
            $ref: '#/definitions/PagedOrganization'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'

  /organizations/<org_id>:
    get:
      tags:
        - organizations
      summary: Returns the details for an organization
      responses:
        200:
          description: Organization details
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Organization does not exist in the system

  /organizations/<org_id>/verify:
    put:
      tags:
        - organizations
      summary: Marks the organization as verified in the system
      parameters:
      - name: org_id
        in: path
        description: >
          ID of organization for verification
        required: true
        type: string
      - in: body
        name: body
        description: >
          Verification details
        required: true
        schema:
          $ref: "#/definitions/VerificationDetails"
      responses:
        201:
          description: The verification request was successful
          schema:
            $ref: '#/definitions/OrganizationDetailsResponse'
        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'
        422:
          description: Organization does not exist in the system

definitions:
  AuthRequest:
    description: >
      Request object that includes user details for authentication
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: Username of the system user
      password:
        type: string
        description: Password of the system user

  AuthResponse:
    description: >
      Response object that includes an auth token for the API user
    type: object
    properties:
       authToken:
          type: string
          readOnly: true

  AuthError:
    description: >
      Response received when an authorization error has occured. This can be
      received when:
      * a malformed or expired Authorization token is submitted
      * the user is requesting an unauthorized route
    type: object
    properties:
      code:
        type: string
        enum:
          - error.jwt.expired
          - error.jwt.invalid_signature
      message:
        type: string

  ContactDetails:
    description: >
      Contact details for an organization
    type: object
    required:
      - first_name
      - last_name
      - email
    properties:
      first_name:
        type: string
        description: Organization's contact first name
      last_name:
        type: string
        description: Organization's contact last name
      email:
        type: string
        description: Organization's contact email address
      phone:
        type: string
        description: Organization's contact phone number

  VerificationDetails:
    description: >
      Verification details for a requested action (for example: verify organization details)
    type:
      object
    required:
      - is_verified
    properties:
      is_verified:
        type: boolean
        description: Flag indicating verification status
      reason:
        type: string
        description: Detailed reason if the request is not verified

  OrganizationRequest:
    description: >
      Request object that includes details for registering a new organization
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Name of the organization
      description:
        type: string
        description: Description of the organization
      contact_details:
        allOf:
          - $ref: '#/definitions/ContactDetails'

  OrganizationResponse:
    description: >
      Response object that includes basic details of the organization; used in list responses
    type: object
    properties:
      id:
        type: string
        description: ID of the organization as a UUID
      name:
        type: string
        description: Name of the organization
      description:
        type: string
        description: Organization description
      is_verified:
        type: boolean
        readOnly: true

  OrganizationDetailsResponse:
    description: >
      Response object that includes the details of an organization
    type: object
    properties:
      id:
        type: string
        description: ID of the organization as a UUID
      name:
        type: string
        description: Name of the organization
      description:
        type: string
        description: Organization description
      contact_details:
        allOf:
          - $ref: '#/definitions/ContactDetails'
      is_verified:
        type: boolean
        readOnly: true

  PageLinks:
      description: >
        Links included in paged responses for navigation
      type: object
      properties:
        next_page:
          type: string

  PagedOrganization:
    description: >
      Page of organization resources
    type: object
    properties:
      objects:
        type: array
        description: Organizations array for page
        items:
          $ref: '#/definitions/OrganizationResponse'
      page:
        type: integer
        description: Current page
      size:
        type: integer
        description: Size of the page
      _links:
        $ref: '#/definitions/PageLinks'