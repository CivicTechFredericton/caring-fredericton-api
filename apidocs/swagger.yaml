# For the complete swagger spec, go here: https://goo.gl/ArFXhH
# It is important to understand all of the components that go into a
# swagger doc.  It is the documentation for your API.  A proper swagger
# doc can be plugged into swagger-ui (https://goo.gl/UmNFcn) and give a
# beautiful page describing your API.
swagger: '2.0'
info:
  title: Caring Calendar API
  description: >
    # Caring Calendar REST API

    These API are used for interacting with information used for the Caring Calendar in
    complpiance with standard REST specifications.

  version: "1.0.0"

host: api.caringfredericton.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
paths:
  # API endpoint for retrieving an authentication token
  /api/login:
    post:
      summary: Retrieve user token
      parameters:
        - name: username
          in: body
          required: true
        - name: password
          in: body
          required: true
      responses:
        200:
          description: Auth token for the API user
          schema:
            $ref: '#/definitions/AuthResponse'
      tags:
        - authentication

  # TODO: examples only.  Edit as needed for your various API endpoints.
  # Every endpoint should be specified, including for each type of
  # submission (GET, POST, PUT, PATCH, DELETE, OPTIONS) that is
  # supported.
  /:
    get:
      summary: TODO -> Enter a description for what the base URL returns
  /users:
    get:
      summary: returns a page of all users active in the system.
      parameters:
          # Name of the parameter.  Parameter names should always be in
          # camelCase format.
        - name: id
          # A parameter can be part of
          #
          #   - body  -> a field in the input json payload
          #   - path  -> in the middle of the URL like /users/42
          #   - query -> a query string parameter like ?parameterNameCamelCase=42
          in: body|path|query
          description: TODO -> Enter a description of the parameter
          # TODO -> enter a type for the parameter.  Available types can
          # be found here: https://goo.gl/UUGZ4j
          type: integer
          # TODO -> provide a format specification, though this is not
          # directly supported by the swagger spec.  Examples include
          # 'email', 'uuid', etc.  This is more or less a hint at the
          # expected format of the field.
          format: number
      #TODO -> list response http codes and their description.
      responses:
        200:
          description: Paged object of users
          schema:
            $ref: '#/definitions/PagedUser'

        401:
          description: Authentication error
          schema:
            $ref: '#/definitions/AuthError'

        403:
          description: Authorization error
          schema:
            $ref: '#/definitions/AuthError'

definitions:
  AuthResponse:
    description: >
      Response object that includes an auth token for the API user
    type: object
    properties:
       authToken:
          type: string
          readOnly: true

  AuthError:
    description: >
      Response received when an authorization error has occured. This can be
      received when:
      * a malformed or expired Authorization token is submitted
      * the user is requesting an unauthorized route
    type: object
    properties:
      code:
        type: string
        enum:
          - error.jwt.expired
          - error.jwt.invalid_signature
      message:
        type: string

  User:
    description: >
      Represents a user in the system
    type: object
    properties:
      id:
        type: integer
        format: number
        description: ID of the user
      username:
        type: string
        description: User name of the user
      email:
        type: string
        format: email
        description: Contact email address

  PageLinks:
    description: >
      Links included in paged responses for navigation.
    type: object
    properties:
      next_page:
        type: string

  PagedUser:
    description: >
      Page of user resources
    type: object
    properties:
      objects:
        type: array
        description: User array for page
        items:
          $ref: '#/definitions/User'
      page:
        type: integer
        description: Current page
      size:
        type: integer
        description: Size of the page
      _links:
        $ref: '#/definitions/PageLinks'
