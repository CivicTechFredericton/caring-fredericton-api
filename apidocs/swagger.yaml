openapi: 3.0.2
info:
  title: Caring Calendar API
  description: >
    # Caring Calendar REST API

    These API are used for interacting with information used for the Caring
    Calendar in compliance with standard REST specifications.
  version: 1.0.0
servers:
  - url: 'https://api.caringfredericton.com/'
paths:
  /api/login:
    post:
      tags:
        - Authentication
      summary: Retrieve user token
      responses:
        '200':
          description: Auth token for the API user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid username and password combination
        '422':
          description: Missing required parameters
      requestBody:
        $ref: '#/components/requestBodies/AuthDetails'
  /guests/organizations:
    get:
      tags:
        - Guest View
      summary: Returns a list of all registered and verified organizations
      responses:
        '200':
          description: Paged object of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedGuestOrganization'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /guests/events:
    get:
      tags:
        - Guest View
      summary: Returns a list of all the registered events
      parameters:
        - name: start_date
          in: query
          description: |
            Filter value for the start date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: end_date
          in: query
          description: |
            Filter value for the end date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: categories
          in: query
          description: |
            Comma delimited filter value list of category names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Paged object of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedEvent'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /guests/organizations/<org_id>/events:
    get:
      tags:
        - Guest View
      summary: Returns a list of created events associated with the organization
      parameters:
        - name: org_id
          in: path
          description: |
            Organization ID
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          description: |
            Filter value for the start date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: end_date
          in: query
          description: |
            Filter value for the end date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: categories
          in: query
          description: |
            Comma delimited filter value list of category names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Paged object of events
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/PagedEvent'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /guests/organizations/<org_id>/events/<event_id>:
    get:
      tags:
        - Guest View
      summary: Gets the details of a registered event
      parameters:
        - name: org_id
          in: path
          description: |
            Organization ID
          required: true
          schema:
            type: string
        - name: event_id
          in: path
          description: |
            Event ID
          required: true
          schema:
            type: string
        - name: occurrence_num
          in: query
          description: |
            Specific occurrence number for retrieval
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Event found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Event for the organization does not exist in the system
  /events:
    get:
      tags:
        - Event Management
      summary: Returns a list of all the events in the system
      parameters:
        - name: start_date
          in: query
          description: |
            Filter value for the start date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: end_date
          in: query
          description: |
            Filter value for the end date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: categories
          in: query
          description: |
            Comma delimited filter value list of category names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Paged object of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedEvent'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /organizations/<org_id>/events:
    get:
      tags:
        - Event Management
      summary: Returns a list of all the events associated with the organization
      parameters:
        - name: org_id
          in: path
          description: |
            Organization ID
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          description: |
            Filter value for the start date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: end_date
          in: query
          description: |
            Filter value for the end date period of events
          required: false
          schema:
            type: string
            format: YYYY-MM-DD
        - name: categories
          in: query
          description: |
            Comma delimited filter value list of category names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Paged object of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedEvent'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
    post:
      tags:
        - Event Management
      summary: Creates a new event in the system for an organization
      parameters:
        - name: org_id
          in: path
          description: |
            Organization ID.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/EventRequest'
      responses:
        '201':
          description: The event was created in the system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailsResponse'
        '422':
          description: Missing required parameters
  /organizations/<org_id>/events/<event_id>:
    get:
      tags:
        - Event Management
      summary: Gets the details of an existing event
      parameters:
        - name: org_id
          in: path
          description: |
            Organization ID
          required: true
          schema:
            type: string
        - name: event_id
          in: path
          description: |
            Event ID
          required: true
          schema:
            type: string
        - name: occurrence_num
          in: query
          description: |
            Specific occurrence number for retrieval
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Event found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Event for the organization does not exist in the system
    put:
      tags:
        - Event Management
      summary: Updates an existing event
      parameters:
        - in: path
          name: org_id
          description: |
            Organization ID
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          description: |
            Event ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Event details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Event for the organization does not exist in the system
      requestBody:
        $ref: '#/components/requestBodies/EventRequest'
    delete:
      tags:
        - Event Management
      summary: Cancels an existing event
      parameters:
        - in: path
          name: org_id
          description: |
            Organization ID
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          description: |
            Event ID
          required: true
          schema:
            type: string
      responses:
          '200':
            description: Event cancelled
          '401':
            description: Authentication error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthError'
          '400':
            description: Error cancelling the event
          '404':
            description: Event for the organization does not exist in the system
  /organizations:
    get:
      tags:
        - Organizations
      summary: Returns a list of all the organizations in the system
      parameters:
        - name: is_verified
          in: query
          description: |
            Filter value on organization's verification status
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Paged object of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedOrganization'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
  /organizations/<org_id>:
    get:
      tags:
        - Organizations
      summary: Returns the details for an organization
      parameters:
        - in: path
          name: org_id
          description: |
            Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Organization does not exist in the system
    put:
      tags:
        - Organizations
      summary: Update the details of an organization
      parameters:
        - in: path
          name: org_id
          description: |
            Organization ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Organization does not exist in the system
      requestBody:
        $ref: '#/components/requestBodies/VerificationDetails'

  /organizations/<org_id>/verify:
    post:
      tags:
        - Organizations
      summary: Marks the organization as verified in the system
      parameters:
        - in: path
          name: org_id
          description: |
            Organization ID
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The verification request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Organization does not exist in the system
      requestBody:
        $ref: '#/components/requestBodies/VerificationDetails'

  /organizations/register:
    post:
      tags:
        - Organizations
      summary: Sends a registration request for an organization
      responses:
        '201':
          description: >-
            The request was accepted in the system pending verification by the
            System Administrator
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetailsResponse'
        '422':
          description: Missing required parameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        description: |
          Organization registration request details
        required: true

  /users/signup:
    post:
      tags:
        - Users
      summary: Registers a new user 
      responses:
        '201':
          description: The new user was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '409':
          description: Email already in use
        '422':
          description: Missing required parameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDetails'
        description: |
          User registration request details
        required: true

  /users/<user_id>:
    get:
      tags:
        - Users
      summary: Returns the details for a user 
      parameters:
        - in: path
          name: user_id
          description: |
            User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: User does not exist in the system

#  /users/<user_id>/join/<org_id>:
#    post:
#      tags:
#        - Users
#      summary: Joins the user with user_id to org_id. Any existing org that the user is already part of will be replaced.
#      parameters:
#        - in: path
#          name: user_id
#          description: |
#            User ID
#          required: true
#          schema:
#            type: string
#        - in: path
#          name: org_id
#          description: |
#            Organization ID
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: User details.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/UserDetailsResponse'
#        '401':
#          description: Auth token for the activated user.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AuthResponse'
#        '422':
#          description: User does not exist in the system
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UserJoinDetails'
#        description: |
#          Details for a user joining an organization.
#        required: true

components:
  requestBodies:
    AuthDetails:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthRequest'
      description: User authentication request details
      required: true
    VerificationDetails:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerificationDetails'
      description: |
        Verification details
      required: true
    EventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventRequest'
      description: |
        Event request details
      required: true
  schemas:
    AuthRequest:
      description: |
        Request object that includes user details for authentication
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username of the system user
        password:
          type: string
          description: Password of the system user
    AuthResponse:
      description: |
        Response object that includes an auth token for the API user
      type: object
      properties:
        authToken:
          type: string
          readOnly: true
    AuthError:
      description: >
        Response received when an authorization error has occured. This can be
        received when: * a malformed or expired Authorization token is submitted
        * the user is requesting an unauthorized route
      type: object
      properties:
        code:
          type: string
          enum:
            - error.jwt.expired
            - error.jwt.invalid_signature
        message:
          type: string
    Address:
      description: Organization address details
      type: object
      required:
        - street
        - postal_code
        - city
        - province
        - country
      properties:
        street:
          type: string
          description: Street
        postal_code:
          type: string
          description: Postal code
        city:
          type: string
          description: City
        province:
          type: string
          description: Province
        country:
          type: string
          description: Country
    AdministratorDetails:
      description: Organization admininstrator user details
      type: object
      properties:
        email:
          type: string
          description: User's email address
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
    OrganizationRequest:
      description: |
        Request object that includes details for registering a new organization
      type: object
      required:
        - name
        - email
        - phone
        - administrator_id
        - address
      properties:
        name:
          type: string
          description: Name of the organization
        description:
          type: string
          description: Description of the organization
        email:
          type: string
          description: Email for the organization
        phone:
          type: string
          description: Phone number for the organization
        administrator_id:
          type: string
          description: The ID of the user set as the administrator
        administrator_details:
          allOf:
            - $ref: '#/components/schemas/AdministratorDetails'
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
    OrganizationGuestResponse:
      description: >
        Response object that is used for the guest view of the organizations
      type: object
      properties:
        id:
          type: string
          description: ID of the organization as a UUID
          readOnly: true
        name:
          type: string
          description: Name of the organization
    OrganizationResponse:
      description: >
        Response object that includes basic details of the organization; used in
        list responses
      type: object
      properties:
        id:
          type: string
          description: ID of the organization as a UUID
          readOnly: true
        name:
          type: string
          description: Name of the organization
        email:
          type: string
          description: Organization email
        phone:
          type: string
          description: Organization phone number
        is_verified:
          type: boolean
          readOnly: true
    OrganizationDetailsResponse:
      description: |
        Response object that includes the details of an organization
      type: object
      properties:
        id:
          type: string
          description: ID of the organization as a UUID
          readOnly: true
        name:
          type: string
          description: Name of the organization
        phone:
          type: string
          description: Organization phone number
        email:
          type: string
          description: Organization email
        administrator_id:
          type: string
          description: The ID of the user set as the administrator
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        is_verified:
          type: boolean
          readOnly: true
    PagedGuestOrganization:
      description: |
        Page of organization resources for guest view
      type: object
      properties:
        objects:
          type: array
          description: Organizations array for page
          items:
            $ref: '#/components/schemas/OrganizationGuestResponse'
        page:
          type: integer
          description: Current page
        size:
          type: integer
          description: Size of the page
        _links:
          $ref: '#/components/schemas/PageLinks'
    PagedOrganization:
      description: |
        Page of organization resources
      type: object
      properties:
        objects:
          type: array
          description: Organizations array for page
          items:
            $ref: '#/components/schemas/OrganizationResponse'
        page:
          type: integer
          description: Current page
        size:
          type: integer
          description: Size of the page
        _links:
          $ref: '#/components/schemas/PageLinks'
    VerificationDetails:
      description: >
        Verification details for a requested action (for example: verify
        organization details)
      type: object
      required:
        - is_verified
      properties:
        is_verified:
          type: boolean
          description: Flag indicating verification status
        reason:
          type: string
          description: Detailed reason if the request is not verified
    EventRequest:
      description: |
        Request object that includes details for an event
      type: object
      required:
        - name
        - contact_email
        - start_date
        - end_date
        - start_time
        - end_time
      properties:
        name:
          type: string
          description: Name of the event
        owner:
          type: string
          description: Owner identifier for the event
        description:
          type: string
          description: Description of the event
        categories:
          type: array
          items:
            type: string
          description: List of category tag names associated with the event
        start_date:
          type: string
          description: The start date for the event
          format: YYYY-MM-DD
        end_date:
          type: string
          description: The end date for the event
          format: YYYY-MM-DD
        start_time:
          type: string
          description: The start time for the event
          format: HH:MM:SS
        end_time:
          type: string
          description: The end time for the event
          format: HH:MM:SS
        is_recurring:
          type: boolean
          description: Flag indicating if the event is recurring
          default: false
        recurrence_details:
          allOf:
            - $ref: '#/components/schemas/RecurrenceDetails'
    EventResponse:
      description: |
        Response object containing the base event information
      type: object
      properties:
        id:
          type: string
          description: ID of the event as a UUID
          readOnly: true
        occurence_num:
          type: integer
          description: Specific occurrence of the event based on recurrence details
        name:
          type: string
          description: Name of the event
        owner:
          type: string
          description: Owner identifier for the event
        description:
          type: string
          description: Description of the event
        categories:
          type: array
          items:
            type: string
          description: List of category tag names associated with the event
        start_date:
          type: string
          description: The start date for the event
          format: YYYY-MM-DD
        end_date:
          type: string
          description: The end date for the event
          format: YYYY-MM-DD
        start_time:
          type: string
          description: The start time for the event
          format: HH:MM:SS
        end_time:
          type: string
          description: The end time for the event
          format: HH:MM:SS
    EventDetailsResponse:
      description: |
        Response object containing the detailed event information
      type: object
      properties:
        id:
          type: string
          description: ID of the event as a UUID
          readOnly: true
        name:
          type: string
          description: Name of the event
        owner:
          type: string
          description: Owner (organization) identifier for the event
        contact_email:
          type: string
          description: Contact email for more details about the event
        description:
          type: string
          description: Description of the event
        categories:
          type: array
          items:
            type: string
          description: List of category tag names associated with the event
        start_date:
          type: string
          description: The start date for the event
          format: YYYY-MM-DD
        end_date:
          type: string
          description: The end date for the event
          format: YYYY-MM-DD
        start_time:
          type: string
          description: The start time for the event
          format: HH:MM:SS
        end_time:
          type: string
          description: The end time for the event
          format: HH:MM:SS
        end_date_no_recur:
          type: string
          description: The end date for the event that has no specified occurence value, but start, end date for each event and an overall end date
          format: YYYY-MM-DD
        is_recurring:
          type: boolean
          description: Flag indicating if the event is recurring
        recurrence_details:
          allOf:
            - $ref: '#/components/schemas/RecurrenceDetails'
        timezone:
          type: string
          description: Timezone for the event as it was created
    EventOccurrenceDetailsResponse:
      description: |
        Response object containing the detailed event information for an occurrence
      type: object
      properties:
        id:
          type: string
          description: ID of the event as a UUID
          readOnly: true
        name:
          type: string
          description: Name of the event
        occurrence_num:
          type: integer
          description: Specific occurrence of the event based on recurrence details
        owner:
          type: string
          description: Owner identifier for the event
        description:
          type: string
          description: Description of the event
        categories:
          type: array
          items:
            type: string
          description: List of category tag names associated with the event
        start_date:
          type: string
          description: The start date for the event
          format: YYYY-MM-DD
        end_date:
          type: string
          description: The end date for the event
          format: YYYY-MM-DD
        start_time:
          type: string
          description: The start time for the event
          format: 'HH:MM:SS'
        end_time:
          type: string
          description: The end time for the event
          format: 'HH:MM:SS'
        is_recurring:
          type: boolean
          description: Flag indicating if the event is recurring
        recurrence_details:
          allOf:
            - $ref: '#/components/schemas/RecurrenceDetails'
        timezone:
          type: string
          description: Timezone for the event as it was created
    PagedEvent:
      description: |
        Page of organization resources
      type: object
      properties:
        objects:
          type: array
          description: Events array for page
          items:
            $ref: '#/components/schemas/EventResponse'
        page:
          type: integer
          description: Current page
        size:
          type: integer
          description: Size of the page
        _links:
          $ref: '#/components/schemas/PageLinks'
    UserDetailsResponse:
      description: >
        Response object containing the detailed user information
      type: object
      properties:
        id:
          type: string
          description: ID of the user as a UUID
        email:
          type: string
          description: Name of the event
        first_name:
          type: string
          description: The user's first name 
        last_name:
          type: string
          description: The user's second name 
        active:
          type: boolean
          description: The user's activity state
        organization_id:
          type: string
          description: The ID of the organization that the user is associated with as a UUID
        organization_name:
          type: string
          description: The name of the organization the user belongs to
    UserRegistrationDetails:
      description: >
        Registration details for a user. 
      type:
        object
      required:
      - user_sub
      - email
      - first_name
      - last_name
      properties:
        user_sub:
          type: string
          description: The Cognito sub value
        email:
          type: string
          description: The user email/username
        first_name:
          type: string
          description: The users's first name 
        last_name:
          type: string
          description: The users's last name
#    UserJoinDetails:
#      description: >
#      type:
#        object
#      required:
#      - reason
#      properties:
#        reason:
#          type: string
#          description: The reason the user is joining this organization.
    RecurrenceDetails:
      description: |
        Details pertaining to the event's recurrence information
      type: object
      required:
        - recurrence
      properties:
        recurrence:
          type: string
          description: The event recurrence option (DAILY, WEEKLY, BI_WEEKLY, MONTHLY)
        occurrence_type:
          type: string
          description: The type of occurrence (NEVER, ON, AFTER)
        num_recurrences:
          type: integer
          description: The number of times the event is set to recur
        on_end_date:
          type: string
          description: The end date for the event that has no specified occurence value, but start, end date for each event and an overall end date
          format: YYYY-MM-DD
        day_of_week:
          type: integer
          description: The specified day [1-7] that the event is set to recur
        week_of_month:
          type: integer
          description: The specified week of the month [1,2,3,4,5,-1] that the event is set to recur (-1->last week")
        separation_count:
          type: integer
          description: The separation count between intervals, default value is 1
    PageLinks:
      description: |
        Links included in paged responses for navigation
      type: object
      properties:
        next_page:
          type: string
